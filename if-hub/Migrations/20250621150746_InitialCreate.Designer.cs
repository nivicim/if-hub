// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace athenasarchive.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250621150746_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("if_hub.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("if_hub.Entities.Curtida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RespostaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RespostaId");

                    b.HasIndex("TopicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("if_hub.Entities.LogAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogAcoes");
                });

            modelBuilder.Entity("if_hub.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Lida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RespostaPaiId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RespostaPaiId");

                    b.HasIndex("TopicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("if_hub.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("if_hub.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Topicos");
                });

            modelBuilder.Entity("if_hub.Entities.TopicoTag", b =>
                {
                    b.Property<int>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TopicoId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("Banido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("if_hub.Entities.Curtida", b =>
                {
                    b.HasOne("if_hub.Entities.Resposta", "Resposta")
                        .WithMany("Curtidas")
                        .HasForeignKey("RespostaId");

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("Curtidas")
                        .HasForeignKey("TopicoId");

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resposta");

                    b.Navigation("Topico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.LogAcao", b =>
                {
                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("LogAcoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Notificacao", b =>
                {
                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Notificacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.HasOne("if_hub.Entities.Resposta", "RespostaPai")
                        .WithMany("RespostasFilhas")
                        .HasForeignKey("RespostaPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("Respostas")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Respostas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RespostaPai");

                    b.Navigation("Topico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.HasOne("if_hub.Entities.Categoria", "Categoria")
                        .WithMany("Topicos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Topicos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.TopicoTag", b =>
                {
                    b.HasOne("if_hub.Entities.Tag", "Tag")
                        .WithMany("TopicoTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("TopicoTags")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Topico");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.HasOne("if_hub.Entities.Role", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("if_hub.Entities.Categoria", b =>
                {
                    b.Navigation("Topicos");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("RespostasFilhas");
                });

            modelBuilder.Entity("if_hub.Entities.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("if_hub.Entities.Tag", b =>
                {
                    b.Navigation("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("Respostas");

                    b.Navigation("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("LogAcoes");

                    b.Navigation("Notificacoes");

                    b.Navigation("Respostas");

                    b.Navigation("Topicos");
                });
#pragma warning restore 612, 618
        }
    }
}
