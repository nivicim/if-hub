// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace athenasarchive.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("if_hub.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Descricao = "Discussões sobre linguagens, algoritmos e desenvolvimento de software.",
                            Nome = "Programação"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Descricao = "Tópicos sobre limites, derivadas, integrais e aplicações.",
                            Nome = "Cálculo"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Descricao = "Discussões sobre componentes de computador, montagem e manutenção.",
                            Nome = "Hardware"
                        });
                });

            modelBuilder.Entity("if_hub.Entities.Curtida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RespostaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RespostaId");

                    b.HasIndex("TopicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("if_hub.Entities.LogAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogAcoes");
                });

            modelBuilder.Entity("if_hub.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Lida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RespostaPaiId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RespostaPaiId");

                    b.HasIndex("TopicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Respostas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Conteudo = "Claro! Um ponteiro para ponteiro armazena o endereço de memória de outro ponteiro. Pense nele como um 'índice' para seus 'índices' de memória.",
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            TopicoId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("if_hub.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aluno"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Moderador"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Admin"
                        });
                });

            modelBuilder.Entity("if_hub.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Topicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Conteudo = "Olá pessoal, estou com dificuldade para entender como funcionam os ponteiros para ponteiros em C++. Alguém poderia me dar uma luz?",
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Titulo = "Dúvida sobre ponteiros em C++",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("if_hub.Entities.TopicoTag", b =>
                {
                    b.Property<int>("TopicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TopicoId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("Banido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Banido = false,
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Email = "admin@email.com",
                            Nome = "Admin User",
                            RoleId = 3,
                            SenhaHash = "AQAAAAIAAYagAAAAEPhH/65zZtC4N9YtCqY9iE2n5xZ3zZ+yZ+e8w3c9X6b8V5n7f7j3X6n8Y7d9V6c3"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Banido = false,
                            DataCriacao = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            Email = "aluno@email.com",
                            Nome = "Aluno Teste",
                            RoleId = 1,
                            SenhaHash = "AQAAAAIAAYagAAAAEJ5y/8f6zZtC4N9YtCqY9iE2n5xZ3zZ+yZ+e8w3c9X6b8V5n7f7j3X6n8Y7d9V6c4"
                        });
                });

            modelBuilder.Entity("if_hub.Entities.Curtida", b =>
                {
                    b.HasOne("if_hub.Entities.Resposta", "Resposta")
                        .WithMany("Curtidas")
                        .HasForeignKey("RespostaId");

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("Curtidas")
                        .HasForeignKey("TopicoId");

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resposta");

                    b.Navigation("Topico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.LogAcao", b =>
                {
                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("LogAcoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Notificacao", b =>
                {
                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Notificacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.HasOne("if_hub.Entities.Resposta", "RespostaPai")
                        .WithMany("RespostasFilhas")
                        .HasForeignKey("RespostaPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("Respostas")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Respostas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RespostaPai");

                    b.Navigation("Topico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.HasOne("if_hub.Entities.Categoria", "Categoria")
                        .WithMany("Topicos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Usuario", "Usuario")
                        .WithMany("Topicos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("if_hub.Entities.TopicoTag", b =>
                {
                    b.HasOne("if_hub.Entities.Tag", "Tag")
                        .WithMany("TopicoTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("if_hub.Entities.Topico", "Topico")
                        .WithMany("TopicoTags")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Topico");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.HasOne("if_hub.Entities.Role", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("if_hub.Entities.Categoria", b =>
                {
                    b.Navigation("Topicos");
                });

            modelBuilder.Entity("if_hub.Entities.Resposta", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("RespostasFilhas");
                });

            modelBuilder.Entity("if_hub.Entities.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("if_hub.Entities.Tag", b =>
                {
                    b.Navigation("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Topico", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("Respostas");

                    b.Navigation("TopicoTags");
                });

            modelBuilder.Entity("if_hub.Entities.Usuario", b =>
                {
                    b.Navigation("Curtidas");

                    b.Navigation("LogAcoes");

                    b.Navigation("Notificacoes");

                    b.Navigation("Respostas");

                    b.Navigation("Topicos");
                });
#pragma warning restore 612, 618
        }
    }
}
