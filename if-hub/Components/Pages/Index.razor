@page "/"
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using if_hub.ViewModels
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Home - Fórum IF-Hub</PageTitle>

<div class="flex justify-between items-center mb-6">
    <h1 class="text-3xl font-bold text-[#222831]">Tópicos Recentes</h1>
    <AuthorizeView>
        <Authorized>
            <a href="/topics/new" class="create-topic-button font-semibold py-3 px-6 rounded-lg shadow-md hover:shadow-lg transition duration-150 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                <span>Criar Novo Tópico</span>
            </a>
        </Authorized>
    </AuthorizeView>
</div>


@if (topicos == null)
{
    <p><em>Carregando tópicos...</em></p>
}
else
{
    <div class="space-y-4">
        @foreach (var topico in topicos)
        {
            <article class="topic-card bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-200 flex flex-col">
                <div class="flex-grow">
                    <div class="flex items-center mb-3">
                        <img src="https://placehold.co/40x40/393E46/EEEEEE?text=@(topico.UsuarioNome?.FirstOrDefault())" alt="Avatar do Utilizador" class="w-10 h-10 rounded-full mr-3">
                        <div>
                            <p class="font-semibold username-text">@topico.UsuarioNome</p>
                            <p class="text-sm meta-text">em <span class="category-tag">@topico.CategoriaNome</span></p>
                        </div>
                    </div>
                    <h2 class="text-xl font-bold mb-2">
                        <a href="@($"/topics/{topico.Id}")" class="topic-title-link">@topico.Titulo</a>
                    </h2>
                </div>
                <div class="flex items-center text-sm meta-text mt-4 pt-4 border-t border-gray-100 space-x-4">
                    <AuthorizeView>
                        <Authorized>
                            <button @onclick="() => ToggleLike(topico)" class="flex items-center transition-transform duration-150 ease-in-out hover:scale-110">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                                     class="w-5 h-5 inline mr-1 transition-colors @(topico.UsuarioCurtiu ? "text-red-500" : "text-gray-400")">
                                    <path d="M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 0 1-1.162-.682 22.045 22.045 0 0 1-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 0 1 8-2.828A4.5 4.5 0 0 1 18 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 0 1-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 0 1-.69.001l-.002-.001Z" />
                                </svg>
                                @topico.TotalCurtidas Curtidas
                            </button>
                        </Authorized>
                        <NotAuthorized>
                            <span class="flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 inline mr-1 text-gray-400">
                                    <path d="M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 0 1-1.162-.682 22.045 22.045 0 0 1-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 0 1 8-2.828A4.5 4.5 0 0 1 18 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 0 1-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 0 1-.69.001l-.002-.001Z" />
                                </svg>
                                @topico.TotalCurtidas Curtidas
                            </span>
                        </NotAuthorized>
                    </AuthorizeView>

                    <span class="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mr-1">
                            <path fill-rule="evenodd" d="M2 5.25A3.25 3.25 0 0 1 5.25 2h9.5A3.25 3.25 0 0 1 18 5.25v7.5A3.25 3.25 0 0 1 14.75 16h-2.072l-1.604 1.203a.75.75 0 0 1-.948 0L8.522 16H5.25A3.25 3.25 0 0 1 2 12.75v-7.5Zm1.5 0V12.75c0 .966.784 1.75 1.75 1.75H8.25l1.004.753a.75.75 0 0 0 .942 0l1.004-.753h2.5a1.75 1.75 0 0 0 1.75-1.75v-7.5a1.75 1.75 0 0 0-1.75-1.75h-9.5a1.75 1.75 0 0 0-1.75 1.75Z" clip-rule="evenodd" />
                        </svg>
                        @topico.TotalRespostas Respostas
                    </span>
                </div>
            </article>
        }
    </div>
}

@code {
    private List<TopicListItemViewModel>? topicos;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            if (!string.IsNullOrEmpty(token))
            {
                Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            }

            topicos = await Http.GetFromJsonAsync<List<TopicListItemViewModel>>("api/topicos");

            Http.DefaultRequestHeaders.Authorization = null;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao buscar tópicos: {ex.Message}");
        }
    }

    private async Task ToggleLike(TopicListItemViewModel topico)
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        if (string.IsNullOrEmpty(token))
        {
            Navigation.NavigateTo("/login");
            return;
        }
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        HttpResponseMessage response;
        if (topico.UsuarioCurtiu)
        {
            response = await Http.DeleteAsync($"api/topicos/{topico.Id}/curtir");
        }
        else
        {
            response = await Http.PostAsJsonAsync($"api/topicos/{topico.Id}/curtir", new { });
        }

        Http.DefaultRequestHeaders.Authorization = null;

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
        else
        {
            Console.WriteLine($"Falha ao curtir/descurtir. Status: {response.StatusCode}");
        }
    }
}